plugins {

    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.


    id 'com.android.application'
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader -> localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.untitled"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "26.1.10909125"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.untitled"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//        minSdk = flutter.minSdkVersion
//        targetSdk = flutter.targetSdkVersion

        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        minSdkVersion 23
        targetSdkVersion 34

    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
dependencies {
    implementation 'com.google.guava:guava:33.2.1-android'
    implementation "androidx.media3:media3-exoplayer:1.3.1"
    implementation 'com.google.firebase:firebase-appcheck-safetynet:16.1.2'


}


// I put this block in both build.gradle and android/build.gradle... no clue what it does though...
configurations.all {
    resolutionStrategy {
        force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22'
    }
}
task wrapper(type: Wrapper) {
    gradleVersion = '7.2'
}
task prepareKotlinBuildScriptModel {

}
//
//MD5: 6F:C5:E8:57:34:F6:BD:47:F8:B3:D6:E6:87:AB:C4:86
//SHA1: C9:D4:36:02:A9:9E:A1:CF:61:9E:7B:02:95:AE:83:F5:BE:39:19:50
//SHA-256: 72:DE:7E:98:32:02:22:A3:C9:46:29:7E:5D:BD:19:6B:58:55:A1:FB:CD:4B:68:9A:AE:EF:CD:BC:28:47:E9:54



